<?php

/**
 * @file
 * The DFP module.
 */

use Drupal\Core\Routing\RouteMatchInterface;

// @todo move constants to interface
//define('DFP_GOOGLE_TAG_SERVICES_URL', 'www.googletagservices.com/tag/js/gpt.js');
//define('DFP_GOOGLE_SHORT_TAG_SERVICES_URL', 'pubads.g.doubleclick.net/gampad');
define('DFP_GOOGLE_TAG_SERVICES_URL', 'example.com/www.googletagservices.com/tag/js/gpt.js');
define('DFP_GOOGLE_SHORT_TAG_SERVICES_URL', 'example.com/pubads.g.doubleclick.net/gampad');

/**
 * Implements hook_help().
 */
function dfp_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.dfp':
      $output = '<p>' . t('The Doubleclick For Publishers (DFP) module allows you to integrate Google Publisher Tags onto your site.') . '</p>';
      $output .= '<p>' . t('This module provides you with a general settings form as well as the ability to create a tag (with all its associated data) in the database. You can display your ads as blocks, or add a simple bit of php to your tpl.php file(s) within your theme to indicate where specific tags should be displayed.') . '</p>';
      return $output;
  }
}

/**
 * Implements hook_theme().
 */
function dfp_theme() {
  return array(
    'dfp_tag' => array(
      'render element' => 'elements',
    ),
    'dfp_short_tag' => array(
      'variables' => array(
        'tag' => NULL,
        'url_jump' => NULL,
        'url_ad' => NULL,
      ),
    ),
    'dfp_js' => array(
      'variables' => array(
        'google_tag_services_url' => NULL,
        'targets' => []
      ),
    ),
    'dfp_slot_definition_js' => [
      'variables' => [
        'tag' => NULL
      ]
    ]
  );
}

function dfp_page_attachments(array &$page) {
  $global_settings = \Drupal::config('dfp.settings');
  $build = [
    '#theme' => 'dfp_js',
    '#google_tag_services_url' => DFP_GOOGLE_TAG_SERVICES_URL,
    '#targets' => $global_settings->get('targets'),
  ];
  $page['#attached']['html_head'][] = [
    [
      '#tag' => 'script',
      '#value' => \Drupal::service('renderer')->renderPlain($build),
    ],
    'dfp-setup'
  ];
//  /** @var \Drupal\dfp\View\TagView $tag */
//  foreach (\Drupal::service('dfp.slot_definitions')->getTags() as $tag) {
//    $build = [
//      '#theme' => 'dfp_slot_definition_js',
//      '#tag' => $tag,
//    ];
//    $page['#attached']['html_head'][] = [
//      [
//        '#tag' => 'script',
//        // The value of the HTML tag, here we want to end up with <script>alert("Hello world!");</script>.
//        '#value' => \Drupal::service('renderer')->renderPlain($build),
//      ],
//      'dfp-slot-defintion-' . $tag->id()
//    ];
//
//  }
  $page['#attached']['html_head'][] = [
    [
      '#tag' => 'script',
      '#value' => 'blah'
      ], 'test'];
}

function dfp_page_attachments_alter(array &$page) {
  $a = 1;
}

/**
 * Preprocess function for DFP tags.
 */
function template_preprocess_dfp_tag(&$variables) {
  /** @var \Drupal\dfp\View\TagView $tag */
  $tag = $variables['elements']['#tag'];
  $variables['tag'] = $variables['elements']['#tag'];
  $variables['placeholder_id'] = $tag->getPlaceholderId();
  $variables['slug_placement'] = \Drupal::config('dfp.settings')->get('slug_placement');

//
//  // Format certain tag properties for display.
//  $tag->adunit = dfp_token_replace('[dfp_tag:network_id]/' . $tag->adunit, $tag, array('sanitize' => TRUE, 'clear' => TRUE));
//  $tag->size = dfp_format_size($tag->size);
//
//  // Define a javascript ad slot for this tag.
//  _dfp_js_slot_definition($tag);
//
//  // Flag the slot as processed.
//  $variables['tag']->processed = TRUE;

}
